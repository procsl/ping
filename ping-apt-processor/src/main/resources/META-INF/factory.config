#应用名称
application.name=domain

#包名, 如果不设置, 则根据实体自动生成, 注意不要出现 java关键字
factory.repository.package.name=cn.procsl.ping.pk.name

#仓库前缀, 不设置则为Ping
factory.repository.prefix=P

#全局包含的repository类型
factory.repository.includes=org.springframework.data.jpa.repository.JpaRepository\
,org.springframework.data.querydsl.QuerydslPredicateExecutor\
,org.springframework.data.repository.CrudRepository\
,org.springframework.data.jpa.repository.JpaSpecificationExecutor\
,org.springframework.data.repository.PagingAndSortingRepository\
,org.springframework.data.querydsl.QuerydslPredicateExecutor\
,org.springframework.data.querydsl.ReactiveQuerydslPredicateExecutor\
,cn.procsl.ping.boot.domain.business.tree.repository.AdjacencyTreeRepository

#如果使用maven配置, 可以使用同样的key,但是需要在参数前加上 -A,例如
#    <plugin>
#        <groupId>org.apache.maven.plugins</groupId>
#        <artifactId>maven-compiler-plugin</artifactId>
#        <version>3.8.1</version>
#        <configuration>
#            <generatedSourcesDirectory>${project.build.directory}/generated-sources/java
#            </generatedSourcesDirectory>
#            <compilerArgs>
#                <!--包名-->
#                <arg>-Afactory.repository.package.name=cn.procsl.ping.dome.repository</arg>
#                <!--生成的repo列表-->
#                <arg>-Afactory.repository.includes=org.springframework.data.jpa.repository.JpaRepository</arg>
#            </compilerArgs>
#            <annotationProcessors>
#                <annotationProcessor>
#                    cn.procsl.ping.apt.processor.RepositoryProcessor
#                </annotationProcessor>
#            </annotationProcessors>
#        </configuration>
#    </plugin>
#
